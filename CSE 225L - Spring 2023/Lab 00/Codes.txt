// task 1
#include <iostream>
using namespace std;

int main()
{
    int n1, n2;
    
    cout << "Enter 1st number: ";
    cin >> n1;
    
    cout << "Enter 2nd number: ";
    cin >> n2;
    
    int sum = n1 + n2;
    cout << "Sum = " << sum << endl;

    return 0;
}

// task 2
#include <iostream>
using namespace std;

int main()
{
    int n;
    
    cout << "Enter n: ";
    cin >> n;
    
    int fact = 1;
    for(int i=1; i<=n; i++) {
        fact = fact * i;    // fact *= i;
    }   
 
    cout << "Factorial of " << n << " is = " << fact << endl;

    return 0;
}

// task 3
#include <iostream>
using namespace std;

int main()
{
    int n1, n2;
    
    cout << "Enter 1st number: ";
    cin >> n1;
    
    cout << "Enter 2nd number: ";
    cin >> n2;
    
    char myOperator;
    cout << "Enter your operator ('+', '-', '*'): ";
    cin >> myOperator;
    
    int result;
    switch(myOperator) {
        case '+':
            result = n1 + n2;
            cout << "Sum = " << result << endl;
            break;
        case '-':
            result = n1 - n2;
            cout << "Difference = " << result << endl;
            break;
        case '*':
            result = n1 * n2;
            cout << "Product = " << result << endl;
            break;
        default:
            cout << "You chose a wrong operator!!" << endl;
            break;
    }

    return 0;
}

// task 4
#include <iostream>
using namespace std;

void isPrime(int n) {
    int isFound = 0;
    
    for(int i=2; i<n; i++) {
        if(n%i == 0) {
            isFound = 1;
            break;
        }
    }
    
    if(isFound == 1) {
        cout << n << " is not prime" << endl;
    } else {
        cout << n << " is prime" << endl;
    }
}

int main()
{
    int a = 300, b = 500;
    
    for(int i = a + 1; i < b; i++) {
        isPrime(i);
    }
    
    return 0;
}


// OOP part
UML Diagram

---------------------------------------
		Box
---------------------------------------
- width: double
- height: double
- depth: double
---------------------------------------
// constructors
+ Box()
+ Box(w: double, h: double, d: double)
// setters
+ setWidth(w: double): void
+ setheight(h: double): void
+ setDepth(d: double): void
// getters
+ getWidth(): double
+ getheight(): double
+ getDepth(): double
+ getVolume(): double
+ print(): void
---------------------------------------

// coding part

#include <iostream>
using namespace std;

// declaration file - Box.h 
class Box {
    private:
        double width;
        double height;
        double depth;
    public: 
        Box();
        Box(double w, double h, double d);
        void setWidth(double w);
        void setHeight(double h);
        void setDepth(double d);
        double getWidth();
        double getHeight();
        double getDepth();
        double getVolume();
        void print();
};

// definition - Box.cpp
// return_type class_name::method_name() {}

Box::Box() {
    width = 1;
    height = 1;
    depth = 1;
}
Box::Box(double w, double h, double d) {
    width = w;
    height = h;
    depth = d;  
}
void Box::setWidth(double w) {
    width = w;
}
void Box::setHeight(double h) {
    height = h;    
}
void Box::setDepth(double d) {
    depth = d;     
}
double Box::getWidth() {
    return width;
}
double Box::getHeight() {
    return height;
}
double Box::getDepth() {
    return depth;
}
double Box::getVolume() {
    double volume = width * height * depth;
    return volume;
}
void Box::print() {
    cout << "width: " << width << ", height: " << height << ", depth: " << depth << endl;
}

// driver file - main.cpp
int main()
{
    cout << "Box-1 information: " << endl;
    Box box1(3, 4, 5);
    box1.print();
    cout << "volume: " << box1.getVolume() << endl;
    
    cout << "Box-2 information: " << endl;
    Box box2;
    box2.print();
    cout << "volume: " << box2.getVolume() << endl;
    
    cout << "Box-2 properties updating: " << endl;
    double t_w, t_h, t_d;
    
    cout << "Enter width: ";
    cin >> t_w;
    cout << "Enter height: ";
    cin >> t_h;
    cout << "Enter depth: ";
    cin >> t_d;
    
    box2.setWidth(t_w);
    box2.setHeight(t_h);
    box2.setDepth(t_d);
    
    box2.print();
    cout << "volume: " << box2.getVolume() << endl;
    
    return 0;
}
















